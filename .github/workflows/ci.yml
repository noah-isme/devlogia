name: CI
on:
  push:
    branches:
      - main
      - "**"
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.47.0-jammy
    services:
      postgres:
        image: postgres:15
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: devlogia_ci
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    env:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/devlogia_ci?schema=public
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Restore Playwright cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-v1
      - name: Install dependencies
        run: pnpm install
      - name: Setup env for CI
        run: cp .env.ci .env
      - name: Prepare database
        run: |
          pnpm prisma generate
          pnpm prisma migrate deploy
          pnpm prisma db seed
      - name: Lint, Typecheck, Test, Build
        run: |
          pnpm lint
          pnpm typecheck
          pnpm test
          CI=1 pnpm build
      - name: Install Playwright Browsers
        run: pnpm exec playwright install
      - name: Run E2E tests
        env:
          PORT: 3000
        run: |
          pnpm start &
          APP_PID=$!
          trap "kill $APP_PID" EXIT
          npx wait-on http://127.0.0.1:3000
          pnpm test:e2e
