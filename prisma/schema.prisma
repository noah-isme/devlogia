generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PostStatus {
  DRAFT
  PUBLISHED
  SCHEDULED
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  role         String   @default("admin")
  createdAt    DateTime @default(now())
  posts        Post[]
}

model Post {
  id          String     @id @default(cuid())
  slug        String     @unique
  title       String
  summary     String?
  contentMdx  String
  coverUrl    String?
  status      PostStatus @default(DRAFT)
  publishedAt DateTime?
  authorId    String
  author      User       @relation(fields: [authorId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  tags        PostTag[]
  searchVector Unsupported("tsvector")? @map("searchVector")

  @@index([status, publishedAt])
}

model Tag {
  id    String  @id @default(cuid())
  name  String  @unique
  slug  String  @unique
  posts PostTag[]
}

model PostTag {
  postId String
  tagId  String
  post   Post @relation(fields: [postId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

model Page {
  id         String   @id @default(cuid())
  slug       String   @unique
  title      String
  contentMdx String
  published  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Media {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  ownerId   String?
  createdAt DateTime @default(now())
}
